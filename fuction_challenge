pragma solidity ^0.8.0;

contract FunctionExample {
    uint public stateVariable;

    constructor(uint initialValue) {
        stateVariable = initialValue;
    }

    function getViewValue() public view returns (uint) {
        return stateVariable;
    }

    function pureFunction(uint x) public pure returns (uint) {
        return x * 2;
    }

    function setVariable(uint newValue) public {
        stateVariable = newValue;
    }

    function payableFunction() public payable {
        stateVariable += 1;
    }
}

contract DerivedContract is FunctionExample {
    constructor(uint initialValue) FunctionExample(initialValue) {}

    // You can override functions from the base contract if needed
    function pureFunction(uint x) public pure override returns (uint) {
        return x * 3;
    }
}
